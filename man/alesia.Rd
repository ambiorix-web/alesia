% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/middleware.R
\name{alesia}
\alias{alesia}
\title{Alesia}
\usage{
alesia(
  caseSensitive = FALSE,
  collapseBooleanAttributes = TRUE,
  collapseInlineTagWhitespace = TRUE,
  collapseWhitespace = TRUE,
  conservativeCollapse = TRUE,
  continueOnParseError = TRUE,
  customAttrAssign = list(),
  customAttrSurround = list(),
  decodeEntities = FALSE,
  html5 = TRUE,
  includeAutoGeneratedTags = TRUE,
  keepClosingSlash = FALSE,
  minifyCSS = TRUE,
  minifyJS = TRUE,
  minifyURLs = TRUE,
  preserveLineBreaks = FALSE,
  preventAttributesEscaping = FALSE,
  processConditionalComments = FALSE,
  quoteCharacter = "'",
  removeAttributeQuotes = TRUE,
  removeComments = TRUE,
  removeEmptyAttributes = TRUE,
  removeEmptyElements = FALSE,
  removeOptionalTags = FALSE,
  removeRedundantAttributes = FALSE,
  removeScriptTypeAttributes = FALSE,
  removeStyleLinkTypeAttributes = FALSE,
  sortAttributes = FALSE,
  sortClassName = FALSE,
  trimCustomFragments = FALSE,
  useShortDoctype = FALSE
)
}
\arguments{
\item{caseSensitive}{Treat attributes in case sensitive manner (useful for custom HTML tags) | false |}

\item{collapseBooleanAttributes}{\href{http://perfectionkills.com/experimenting-with-html-minifier/#collapse_boolean_attributes}{Omit attribute values from boolean attributes} | false |}

\item{collapseInlineTagWhitespace}{Don't leave any spaces between display:inline; elements when collapsing. Must be used in conjunction with collapseWhitespace=true | false |}

\item{collapseWhitespace}{\href{http://perfectionkills.com/experimenting-with-html-minifier/#collapse_whitespace}{Collapse white space that contributes to text nodes in a document tree} | false |}

\item{conservativeCollapse}{Always collapse to 1 space (never remove it entirely). Must be used in conjunction with collapseWhitespace=true | false |}

\item{continueOnParseError}{\href{https://html.spec.whatwg.org/multipage/parsing.html#parse-errors}{Handle parse errors} instead of aborting. | false |}

\item{customAttrAssign}{Arrays of regex'es that allow to support custom attribute assign expressions (e.g. \verb{<div flex?="\{\{mode != cover\}\}"></div>}) | [ ] |

[ ]: R:\%20}

\item{customAttrSurround}{Arrays of regex'es that allow to support custom attribute surround expressions (e.g. \verb{<input \{\{#if value\}\}checked="checked"\{\{/if\}\}>}) | [ ] |

[ ]: R:\%20}

\item{decodeEntities}{Use direct Unicode characters whenever possible | false |}

\item{html5}{Parse input according to HTML5 specifications | true |}

\item{includeAutoGeneratedTags}{Insert tags generated by HTML parser | true |}

\item{keepClosingSlash}{Keep the trailing slash on singleton elements | false |}

\item{minifyCSS}{Minify CSS in style elements and style attributes (uses \href{https://github.com/jakubpawlowicz/clean-css}{clean-css}) | false (could be true, Object, Function(text, type)) |}

\item{minifyJS}{Minify JavaScript in script elements and event attributes (uses \href{https://github.com/mishoo/UglifyJS2}{UglifyJS}) | false (could be true, Object, Function(text, inline)) |}

\item{minifyURLs}{Minify URLs in various attributes (uses \href{https://github.com/stevenvachon/relateurl}{relateurl}) | false (could be String, Object, Function(text)) |}

\item{preserveLineBreaks}{Always collapse to 1 line break (never remove it entirely) when whitespace between tags include a line break. Must be used in conjunction with collapseWhitespace=true | false |}

\item{preventAttributesEscaping}{Prevents the escaping of the values of attributes | false |}

\item{processConditionalComments}{Process contents of conditional comments through minifier | false |}

\item{quoteCharacter}{Type of quote to use for attribute values (' or ") | |}

\item{removeAttributeQuotes}{\href{http://perfectionkills.com/experimenting-with-html-minifier/#remove_attribute_quotes}{Remove quotes around attributes when possible} | false |}

\item{removeComments}{\href{http://perfectionkills.com/experimenting-with-html-minifier/#remove_comments}{Strip HTML comments} | false |}

\item{removeEmptyAttributes}{\href{http://perfectionkills.com/experimenting-with-html-minifier/#remove_empty_or_blank_attributes}{Remove all attributes with whitespace-only values} | false (could be true, Function(attrName, tag)) |}

\item{removeEmptyElements}{\href{http://perfectionkills.com/experimenting-with-html-minifier/#remove_empty_elements}{Remove all elements with empty contents} | false |}

\item{removeOptionalTags}{\href{http://perfectionkills.com/experimenting-with-html-minifier/#remove_optional_tags}{Remove optional tags} | false |}

\item{removeRedundantAttributes}{\href{http://perfectionkills.com/experimenting-with-html-minifier/#remove_redundant_attributes}{Remove attributes when value matches default.} | false |}

\item{removeScriptTypeAttributes}{Remove type="text/javascript" from script tags. Other type attribute values are left intact | false |}

\item{removeStyleLinkTypeAttributes}{Remove type="text/css" from style and link tags. Other type attribute values are left intact | false |}

\item{sortAttributes}{\href{#sorting-attributes--style-classes}{Sort attributes by frequency} | false |}

\item{sortClassName}{\href{#sorting-attributes--style-classes}{Sort style classes by frequency} | false |}

\item{trimCustomFragments}{Trim white space around ignoreCustomFragments. | false |}

\item{useShortDoctype}{\href{http://perfectionkills.com/experimenting-with-html-minifier/#use_short_doctype}{Replaces the doctype with the short (HTML5) doctype} | false |}
}
\description{
Alesia
}
